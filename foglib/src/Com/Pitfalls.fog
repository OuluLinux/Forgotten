

/*

FOG BUGS AND WORKAROUNDS:
	
	The "using namespace" is not implemented in fog yet... sorry.
		WRONG:
			using namespace Fog;
		RIGHT (for now):
			namespace Fog {struct Cls {};}
			#define Cls Fog::Cls
	
	Methods in template class are not automatically marked as inline.
	This is very annoying and yet to be fixed. Sorry:
		WRONG:
			template <class T> struct Cls {
				Cls() {}
				int SomeFn() {return 0;}
			};
		RIGHT:
			template <class T> struct Cls {
				inline Cls() {}
				inline int SomeFn() {return 0;}
			};
			
	
	Inline conditional is broken. Sorry...
		WRONG:
			i == 0 ? a : b
		RIGHT:
			if (i == 0) ... a; else ... b;

	Typedefs with pointers doesn't work correctly. They leave out * while emitting.
		WRONG:
			typedef const char* CString;
		RIGHT:
			typedef Lang::Ptr<const char> CString;
	
	Functions like "operator Type()" requires, that the Type is only one word.
		WRONG:
			operator conat char* () const {return "";}
		RIGHT:
			typedef const char ConstChar;
			operator ConstChar* () const {return "";}
	
	Meta arrays can't be looped yet
		WRONG:
			auto declaration some_fn(statement args[]) {
				for (iterator i = $args.ids(); i; ++i)
					...
			}
			auto statement some_ids[]Â = a, b, c;
			$some_fn($some_ids);

*/
