
/*namespace std {
export/interface Com;
export/implementation Com;

template <class T> struct initializer_list {
	int size() :{ export/noimplementation; };
	T* begin() :{ export/noimplementation; };
	T* end() :{ export/noimplementation; };
};

}*/

namespace Com {

int SignificantBits(uint32 x) :{ export/noimplementation; };
int SignificantBits64(uint64 x) :{ export/noimplementation; };

int64 DateSeconds(uint64 year, uint64 month, uint64 day) :{ export/noimplementation; };
int64 TimeSeconds(uint64 year, uint64 month, uint64 day, uint64 hour, uint64 minute, uint64 second) :{ export/noimplementation; };
uint64 NativeCurrentTime() :{ export/noimplementation; };
uint64 NativeNanoSeconds() :{ export/noimplementation; };
uint64 NativeMilliSeconds() :{ export/noimplementation; };

void NativeDblStr(double d, char* buf, int buf_size);
void NativeDblStr(double d, short* buf, int buf_size);

const short* NativeUtf8To16(const char* in);
const char*  NativeUtf16To8(const short* in);


};

