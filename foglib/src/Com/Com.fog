
/*
Core:
	
	Scripting
		ECS?
	enet
	
	Crypto
	
	AStar etc
	ActionPlanner
		PipelinePlanner
	
	
	CLI.h (from u++ ssh?)
	
	
	
	
	
*/


namespace Prim				{};
namespace Algorithm			{using/interface Prim;};
namespace Lang				{using/interface Algorithm;};
namespace Native			{using/interface Lang;};
namespace Hash				{using/interface Native;};
namespace Random			{using/interface Hash;};
namespace Abstract			{using/interface Random;};
namespace Text				{using/interface Abstract;};
namespace Container			{using/interface Text;};
namespace Shared			{using/interface Container;};
namespace Stream			{using/interface Shared;};
namespace Chrono			{using/interface Stream;};
namespace Util				{using/interface Chrono;};
namespace Math				{using/interface Util;};
namespace Indirect			{using/interface Math;};
namespace Concurrency		{using/interface Indirect;};
namespace Network			{using/interface Concurrency;};
namespace Crypto			{using/interface Network;};
namespace Interface			{using/interface Crypto;};
namespace LockedContainer	{using/interface Interface;};
namespace TextProc			{using/interface LockedContainer;};
namespace Shell				{using/interface TextProc;};
namespace CLI				{using/interface Shell;};

#define NULL 0

using "Com/Meta.fog";
using "Com/Macros.fog";
using "Com/Prim.fog";
using "Com/Algorithm.fog";
using "Com/Lang.fog";
using "Com/Native.fog";
using "Com/Hash.fog";
using "Com/Random.fog";
using "Com/Abstract.fog";
using "Com/Text.fog";
using "Com/Container.fog";
using "Com/Shared.fog";
using "Com/Stream.fog";
using "Com/Chrono.fog";
using "Com/Util.fog";
using "Com/Math.fog";
using "Com/Indirect.fog";
using "Com/Concurrency.fog";
using "Com/Network.fog";
using "Com/Crypto.fog";
using "Com/Interface.fog";
using "Com/LockedContainer.fog";
using "Com/CompilerBase.fog";
using "Com/Tokenizer.fog";
using "Com/Parser.fog";
using "Com/JSON.fog";
using "Com/Make.fog";
using "Com/CLI.fog";
using "Com/Shell.fog";
using "Com/ShellLib.fog";
using "Com/MetaCompiler.fog";
using "Com/NatShell.fog";
using "Com/Neural.fog";
using "Com/Transformer.fog";


